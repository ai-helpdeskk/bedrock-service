# .github/workflows/ci.yml
name: CI - Build and Push

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**'
      - '!README.md'
      - '!.github/**'
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: samitsinghhh/bedrock-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Update deployment manifest
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      env:
        GITHUB_TOKEN: ${{ secrets.MANIFEST_REPO_TOKEN }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Clone the k8s-manifests repository
        git clone https://github.com/${{ github.repository_owner }}/k8s-manifests.git
        cd k8s-manifests
        
        # Configure git
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # Debug: Show repository structure
        echo "Repository structure:"
        find . -name "*.yaml" -type f | head -20
        
        # Check if deployment file exists (try multiple possible paths)
        DEPLOYMENT_FILE=""
        if [ -f "deployments/bedrock-service-deployment.yaml" ]; then
          DEPLOYMENT_FILE="deployments/bedrock-service-deployment.yaml"
        elif [ -f "k8s/deployments/bedrock-service-deployment.yaml" ]; then
          DEPLOYMENT_FILE="k8s/deployments/bedrock-service-deployment.yaml"
        else
          echo "Error: bedrock-service-deployment.yaml not found!"
          echo "Available deployment files:"
          find . -name "*deployment*.yaml" -type f
          exit 1
        fi
        
        echo "Using deployment file: $DEPLOYMENT_FILE"
        
        # Show current image tag
        echo "Current image configuration:"
        grep -n "image:" "$DEPLOYMENT_FILE" || echo "No image: line found"
        
        # Replace image tag with new SHA
        sed -i "s|${{ env.IMAGE_NAME }}:.*|${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${IMAGE_TAG}|g" "$DEPLOYMENT_FILE"
        
        # Show updated content
        echo "Updated image configuration:"
        grep -n "image:" "$DEPLOYMENT_FILE"
        
        # Commit and push changes
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update bedrock-service image to ${{ github.ref_name }}-${IMAGE_TAG} [skip ci]"
          git push origin main
        fi

    - name: Trigger deployment
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      run: |
        ENV="production"
        if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
          ENV="staging"
        fi
        
        echo "Triggering deployment for $ENV environment"
        
        curl -X POST \
          -H "Authorization: token ${{ secrets.MANIFEST_REPO_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository_owner }}/k8s-manifests/dispatches \
          -d "{\"event_type\":\"deploy-bedrock-service\",\"client_payload\":{\"environment\":\"$ENV\",\"image_tag\":\"${{ github.ref_name }}-${{ github.sha }}\"}}"
